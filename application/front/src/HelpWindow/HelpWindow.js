import React, { Component } from 'react'
import classnames from "classnames";
import PropTypes from "prop-types";
import "./HelpWindow.css";


class HelpWindow extends Component {
    constructor(props) {
        super(props);
        let input = JSON.parse(JSON.stringify(props.input));
        if(input === "Table"){
            this.state = {
                title: "Помощь на странице Таблица",
                titleText: "На данной странице можно просматривать загруженные в БД данные в виде таблицы. Названия колонок подписаны сверху, возможно прокручивание вправо и влево для отображения колонок. Больше записей будет подгружено при прокрутке таблицы вниз",
                bodyText1: "Нажав на кнопку 'Выбор колонок' можно отметить какие колонки будут отображаться в таблице",
                bodyText2: "Нажав на кнопку 'Выбор штатов' можно выбрать по каким штатам будут отображаться в таблице",
                bodyText3: "Нажав на кнопку 'Выбор годов' можно задать диапазон лет по которым будут отображаться записи в таблице",
                bodyText4: "Нажав на кнопку 'Новая запись' можно заполнить форму для добавления новой записи в БД",
                bodyText5: "В каждой из форм можно закрыть форму нажав на кнопку 'Подтвердить', тогда изменения будут применены, или кнопку 'Х', тогда изменения будут отменены",

            };
        }
        if(input === "Map"){
            this.state = {
                title: "Помощь на странице Карта",
                titleText: "На данной странице можно просматривать концентрацию выбранного вещества по штатам на карте США",
                bodyText1: "На карте точками отображается средняя концентрация выбранного вещества в штате. Диаметр точки определяется как значение концентрациив штате. Цвет точки определяется относительно минимальной и максимальной концентраций по данному веществу",
                bodyText2: "Нажав на одну из кнопок 'NO2', 'CO', 'SO2', 'O3' можно выбрать вещество, по которому будут строиться значения на карте",
                bodyText3: "С помощью слайдера можно задать диапазон лет, измерения по которым будут учитываться при отображении точек на карте",
                bodyText4: "Карта отображаются в специальном окне, позволяющем взаимодействовать с ней: Сохранить карту как .png, приблизить и отдалить рассматриваемую зону, при наведении мыши на конкрутную точку будут штат и среднее значение концентрации выбранного вещества по штату ",
                bodyText5: "",
            };
        }
        if(input === "Statistics"){
            this.state = {
                title: "Помощь на странице Статистика",
                titleText: "На данной странице можно просматривать статистическое представление данных БД",
                bodyText1: "При открытии страницы отображается точечный график, также его можно выбрать нажав на кнопку 'Точечная'. Используя выпадающий список 'Выберите штат' можно настроить то, будет он рассчитан по данным всей страны или по конкретному штату на выбор. При наведении мыши на конкретную точку будут отображены дата и среднее значение концентрации выбранного вещества по штату или целой стране. Т.е. рассматривается изменение концентрации во времени",
                bodyText2: "При нажатии на кнопку 'Гистограмма' будет отображена гистограмма данных. При наведении мыши на один из столбцов будут отображены штат и среднее значение концентрации выбранного вещества. Т.е. рассматривается сравнение концентрации в различных штатах",
                bodyText3: "Нажав на одну из кнопок 'NO2', 'CO', 'SO2', 'O3' можно выбрать вещество, по которому будут строится графики",
                bodyText4: "С помощью слайдера можно задать диапазон лет, измерения по которым будут учитываться при построении графиков",
                bodyText5: "Графики отображаются в специальном окне, позволяющем взаимодействовать с ними: Сохранить график как .png, приблизить и отдалить рассматриваемую зону, узнать значение конкретной точки и т.д.",

            };
        }
        if(input === "Home"){
            this.state = {
                title: "Помощь на странице Начало",
                titleText: "Помощь по работе с WEB-приложением 'Архив наблюдений по загрязнению окружающей среды в США'. Приложение изначально использует датасет: https://data.world/data-society/us-air-pollution-data Приложение позволяет просматривать данные БД в табличном виде, в виде графиков концентрации по времени и по штатам, а также на карте. Также возможно импортировать и экспортировать данные БД и сохранять графики в виде изображений",
                bodyText1: "На данной странице можно импортировать данные в Базу данных или экспортировать их из нее",
                bodyText2: "Нажав на кнопку 'Импорт данных' будет открыто окно для выбора документа типа .csv. Данные из документа должны соответствовать требуемому виду, представленному на странице 'Таблица'. Данные в БД будут перезаписаны данными из документа",
                bodyText3: "Нажав на кнопку 'Экспорт данных' данные из БД будут предобразованы в документ типа .csv и сохранены на устройство",
                bodyText4: "Сверху страницы имеется панель с кнопками перехода на другие страницы приложения: 'Начало', 'Карта', 'Статистика', 'Таблица'. На каждой из страниц также имеются кнопки 'Помощь'",
                bodyText5: "Приложение реализовано студентами Санкт-Петербургского государственного электротехнического университета «ЛЭТИ» им. В. И. Ульянова (Ленина)  группы 8382: Кузина А.М., Кулачкова М.К., Янкин Д.О. - в рамках дисциплины 'Введение в нереляционные базы данных'",

            };
        }


    }

    render() {
        return (
            <div id={'text-div'}>
                <h2>{this.state.title}</h2>
                <text >
                    <p>{this.state.titleText}</p>
                    <p>{this.state.bodyText1}</p>
                    <p>{this.state.bodyText2}</p>
                    <p>{this.state.bodyText3}</p>
                    <p>{this.state.bodyText4}</p>
                    <p>{this.state.bodyText5}</p>
                    </text>
                <button className={'modal-window__open'}
                        onClick={() => {this.props.callback()}}>Закрыть</button>
            </div>
        );
    };
}

export default HelpWindow;